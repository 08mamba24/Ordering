<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.njust.main.mapper.SettingMapper">
  <resultMap id="BaseResultMap" type="cn.edu.njust.main.model.Setting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="table_number" jdbcType="INTEGER" property="tableNumber" />
    <result column="today_latest_reserve_time" jdbcType="TIME" property="todayLatestReserveTime" />
    <result column="reserve_span" jdbcType="INTEGER" property="reserveSpan" />
    <result column="person_per_table" jdbcType="INTEGER" property="personPerTable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, table_number, today_latest_reserve_time, reserve_span, person_per_table
  </sql>
  <select id="selectByExample" parameterType="cn.edu.njust.main.model.SettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.njust.main.model.SettingExample">
    delete from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.njust.main.model.Setting">
    insert into setting (id, table_number, today_latest_reserve_time, 
      reserve_span, person_per_table)
    values (#{id,jdbcType=INTEGER}, #{tableNumber,jdbcType=INTEGER}, #{todayLatestReserveTime,jdbcType=TIME}, 
      #{reserveSpan,jdbcType=INTEGER}, #{personPerTable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.njust.main.model.Setting">
    insert into setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tableNumber != null">
        table_number,
      </if>
      <if test="todayLatestReserveTime != null">
        today_latest_reserve_time,
      </if>
      <if test="reserveSpan != null">
        reserve_span,
      </if>
      <if test="personPerTable != null">
        person_per_table,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tableNumber != null">
        #{tableNumber,jdbcType=INTEGER},
      </if>
      <if test="todayLatestReserveTime != null">
        #{todayLatestReserveTime,jdbcType=TIME},
      </if>
      <if test="reserveSpan != null">
        #{reserveSpan,jdbcType=INTEGER},
      </if>
      <if test="personPerTable != null">
        #{personPerTable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.njust.main.model.SettingExample" resultType="java.lang.Long">
    select count(*) from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tableNumber != null">
        table_number = #{record.tableNumber,jdbcType=INTEGER},
      </if>
      <if test="record.todayLatestReserveTime != null">
        today_latest_reserve_time = #{record.todayLatestReserveTime,jdbcType=TIME},
      </if>
      <if test="record.reserveSpan != null">
        reserve_span = #{record.reserveSpan,jdbcType=INTEGER},
      </if>
      <if test="record.personPerTable != null">
        person_per_table = #{record.personPerTable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update setting
    set id = #{record.id,jdbcType=INTEGER},
      table_number = #{record.tableNumber,jdbcType=INTEGER},
      today_latest_reserve_time = #{record.todayLatestReserveTime,jdbcType=TIME},
      reserve_span = #{record.reserveSpan,jdbcType=INTEGER},
      person_per_table = #{record.personPerTable,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.njust.main.model.Setting">
    update setting
    <set>
      <if test="tableNumber != null">
        table_number = #{tableNumber,jdbcType=INTEGER},
      </if>
      <if test="todayLatestReserveTime != null">
        today_latest_reserve_time = #{todayLatestReserveTime,jdbcType=TIME},
      </if>
      <if test="reserveSpan != null">
        reserve_span = #{reserveSpan,jdbcType=INTEGER},
      </if>
      <if test="personPerTable != null">
        person_per_table = #{personPerTable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.njust.main.model.Setting">
    update setting
    set table_number = #{tableNumber,jdbcType=INTEGER},
      today_latest_reserve_time = #{todayLatestReserveTime,jdbcType=TIME},
      reserve_span = #{reserveSpan,jdbcType=INTEGER},
      person_per_table = #{personPerTable,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>